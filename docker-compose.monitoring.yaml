services:

  gatus:
    image: 'twinproduction/gatus:v5.13.1'
    container_name: 'gatus'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gatus.rule=Host(`gatus.docker.localhost`)"
    volumes:
      - './configs/gatus/config.yaml:/config/config.yaml:ro'
      - 'gatus_data:/data/'
    networks:
      - 'k8s-bootstrap'
    extra_hosts:
      - "argo-cd.docker.localhost:172.29.2.100"
      - "k3s-controller.prometheus.docker.localhost:172.29.2.100"
      - "k3s-edge.prometheus.docker.localhost:172.29.2.100"

  prometheus:
    image: 'prom/prometheus:v2.55.1'
    container_name: 'prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' 
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-remote-write-receiver'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=6h'
      - '--storage.tsdb.retention.size=4GB'  
      - '--storage.tsdb.max-block-duration=2h' 
      - '--storage.tsdb.min-block-duration=2h' 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.docker.localhost`)"
    volumes:
      - 'prometheus_data:/prometheus'
      - "./configs/prometheus:/etc/prometheus"
    networks:
      k8s-bootstrap:
        ipv4_address: '172.29.0.110'

  grafana:
    image: 'grafana/grafana:11.3.1'
    container_name: grafana
    user: '472'
    depends_on:
      - 'prometheus'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.docker.localhost`)"
    volumes:
      - 'grafana_data:/var/lib/grafana'
      - './configs/grafana/provisioning/:/etc/grafana/provisioning/'
    env_file:
      - './configs/grafana/config.monitoring'
    networks:
      - 'k8s-bootstrap'

volumes:
  gatus_data: {}
  prometheus_data: {}
  grafana_data: {}

networks:
  k8s-bootstrap:
    external: true
