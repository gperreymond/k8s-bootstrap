# https://taskfile.dev
version: '3'

vars:
  KUBERNETES_VERSION: '1.29.3'
  HELM_ARGO_CD_VERSION: '6.7.13'
  HELM_ARGO_EVENTS_VERSION: '2.4.4'
  HELM_ARGO_WORKFLOWS_VERSION: '0.41.2'
  HELM_ARGO_ROLLOUTS_VERSION: '2.35.1'

tasks:

  # ---------------
  #Â INTERNALS
  # ---------------

  helm-repo-update:
    internal: true
    cmds:
      - helm repo add argo https://argoproj.github.io/argo-helm
      - helm repo update

  install-argo-cd:
    sources:
      - charts/argo-cd-{{.HELM_ARGO_CD_VERSION}}.tgz
      - values/argo-cd.yaml
    cmds:
      - helm pull argo/argo-cd --version {{.HELM_ARGO_CD_VERSION}} --destination charts
      - helm upgrade argo-cd charts/argo-cd-{{.HELM_ARGO_CD_VERSION}}.tgz --install --namespace argo-system --values values/argo-cd.yaml

  install-argo-rollouts:
    sources:
      - charts/argo-rollouts-{{.HELM_ARGO_ROLLOUTS_VERSION}}.tgz
      - values/argo-rollouts.yaml
    cmds:
      - helm pull argo/argo-rollouts --version {{.HELM_ARGO_ROLLOUTS_VERSION}} --destination charts
      - helm upgrade argo-rollouts charts/argo-rollouts-{{.HELM_ARGO_ROLLOUTS_VERSION}}.tgz --install --namespace argo-system --values values/argo-rollouts.yaml


  install-argo-events:
    internal: true
    sources:
      - charts/argo-events-{{.HELM_ARGO_EVENTS_VERSION}}.tgz
      - values/argo-events.yaml
    cmds:
      - helm pull argo/argo-events --version {{.HELM_ARGO_EVENTS_VERSION}} --destination charts
      - helm upgrade argo-events charts/argo-events-{{.HELM_ARGO_EVENTS_VERSION}}.tgz --install --namespace argo-system --values values/argo-events.yaml
  
  install-argo-workflows:
    internal: true
    sources:
      - charts/argo-workflows-{{.HELM_ARGO_WORKFLOWS_VERSION}}.tgz
      - values/argo-workflows.yaml
    cmds:
      - helm pull argo/argo-workflows --version {{.HELM_ARGO_WORKFLOWS_VERSION}} --destination charts
      - helm upgrade argo-workflows charts/argo-workflows-{{.HELM_ARGO_WORKFLOWS_VERSION}}.tgz --install --namespace argo-system --values values/argo-workflows.yaml

  # ---------------
  # ALLOWED
  # ---------------

  cluster-destroy:
    ignore_error: true
    cmds:
      - k3d cluster stop dev-local
      - k3d cluster delete dev-local
      - docker network rm k3d-dev-local

  cluster-create:
    cmds:
      - docker network create k3d-dev-local
      - k3d cluster create --image rancher/k3s:v{{.KUBERNETES_VERSION}}-k3s1 --config cluster.yaml
      - kubectx k3d-dev-local
      - kubectl cluster-info --context k3d-dev-local

  cluster-prepare:
    vars:
      NAMESPACES: |-
        argo-system
        cert-manager
        prometheus
        grafana
    cmds:
      - task: helm-repo-update
      - cmd: mkdir charts
        ignore_error: true
      - kubectx k3d-dev-local
      - for: { var: NAMESPACES }
        ignore_error: true
        cmd: kubectl create ns {{.ITEM}}
      - task: install-argo-cd
      - task: install-argo-rollouts
      - task: install-argo-events
      - task: install-argo-workflows
      - kubectl apply -f manifests/argo-cd-projects.yaml
      - kubectl apply -f manifests/argo-cd-domains.yaml
